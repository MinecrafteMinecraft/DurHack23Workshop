version: "2"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.6
    networks:
      - pipeline-network
    ports:
      - "9092:9092"
    volumes:
      - "kafka-data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  
  pipeline:
    image: durhack/pipeline
    build:
      context: ./
      dockerfile: ./pipeline/Dockerfile
    networks:
      - pipeline-network
    volumes:
      - "sqlite-db:/db"

  dashboard:
    image: durhack/dashboard
    build:
      context: ./
      dockerfile: ./dashboard/Dockerfile
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - "sqlite-db:/db:ro"
  
volumes:
  kafka-data:
    driver: local
  sqlite-db:
    driver: local

networks:
  pipeline-network: {}

